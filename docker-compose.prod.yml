# Docker Compose configuration for production deployment with SSL

version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trademark-search-app
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - HEADLESS=true
    volumes:
      - ./logs:/app/logs
      - /dev/shm:/dev/shm
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - trademark-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: trademark-search-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx-docker-ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/app/static:ro
      - nginx-logs:/var/log/nginx
      - certbot-data:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trademark-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: trademark-search-certbot
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    depends_on:
      - nginx

networks:
  trademark-network:
    driver: bridge

volumes:
  nginx-logs:
    driver: local
  certbot-data:
    driver: local
  certbot-webroot:
    driver: local